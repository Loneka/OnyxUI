"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1428],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=o.createContext({}),s=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(p.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,f=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return t?o.createElement(f,l(l({ref:n},u),{},{components:t})):o.createElement(f,l({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a[c]="string"==typeof e?e:r,l[1]=a;for(var s=2;s<i;s++)l[s]=t[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},58460:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var o=t(87462),r=(t(67294),t(3905));const i={sidebar_position:5},l="Utilities",a={unversionedId:"utilities",id:"utilities",title:"Utilities",description:"Important utilities for UI development.",source:"@site/docs/utilities.md",sourceDirName:".",slug:"/utilities",permalink:"/onyx-ui/docs/utilities",draft:!1,editUrl:"https://github.com/loneka/onyx-ui/edit/master/docs/utilities.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Styling Props",permalink:"/onyx-ui/docs/styling-props"},next:{title:"Production Usage",permalink:"/onyx-ui/docs/in-production"}},p={},s=[{value:"EnsureValue",id:"ensurevalue",level:2},{value:"CombineProps",id:"combineprops",level:2},{value:"Colors",id:"colors",level:2}],u={toc:s},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"utilities"},"Utilities"),(0,r.kt)("p",null,"Important utilities for UI development."),(0,r.kt)("h2",{id:"ensurevalue"},(0,r.kt)("a",{parentName:"h2",href:"/api/Util#EnsureValue"},"EnsureValue")),(0,r.kt)("p",null,"Want to ensure your component props are Fusion ",(0,r.kt)("inlineCode",{parentName:"p"},"Value"),"s? This makes it a one-line operation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Util = OnyxUI.Util\nlocal InnerScope = Fusion.innerScope\n\nreturn function(Props)\n  local Scope = InnerScope(Scope, Util)\n\n  local MyProp = Scope:Fallback(Props.MyProp, "Default")\nend\n')),(0,r.kt)("h2",{id:"combineprops"},(0,r.kt)("a",{parentName:"h2",href:"/api/Util#CombineProps"},"CombineProps")),(0,r.kt)("p",null,'Let\'s say you have a "CustomButton" component, and you want it to support ',(0,r.kt)("inlineCode",{parentName:"p"},"Size"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Position"),", and other arbitrary properties. Manually implementing all that boilerplate in the component itself is tedious. So let's have ",(0,r.kt)("inlineCode",{parentName:"p"},"CombineProps")," do the passthrough for us:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Util = OnyxUI.Util\nlocal Themer = OnyxUI.Themer\nlocal Components = OnyxUI.Components\nlocal InnerScope = Fusion.innerScope\n\nreturn function(Props)\n  local Scope = InnerScope(Scope, Fusion, Util, Components)\n  local Theme = Themer.Theme:now()\n\n  return Scope:BaseButton(Util.CombineProps(Props, {\n    BackgroundTransparency = 0,\n    CornerRadius = Computed(function(Use)\n      return UDim.new(0, Use(Theme.CornerRadius["1"]))\n    end),\n\n    -- All properties from OnyxUI\'s `BaseButton` component will now work.\n  }))\nend\n')),(0,r.kt)("h2",{id:"colors"},(0,r.kt)("a",{parentName:"h2",href:"/api/Util#Colors"},"Colors")),(0,r.kt)("p",null,"Color shorthands imported from ",(0,r.kt)("a",{parentName:"p",href:"https://tailwindcss.com/docs/customizing-colors#default-color-palette"},"TailwindCSS's color palette"),". So you don't have to worry about color picking anymore."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'local Util = OnyxUI.Util\n\nreturn function(Props)\n  return Scope:Button {\n    Color = Util.Colors.Red["500"], -- Shade "500" of Colors.Red\n  }\nend\n')))}m.isMDXComponent=!0}}]);